{
  openapi: 3.0.4,
  info: {
    title: Api,
    version: 1.0
  },
  paths: {
    /Cities: {
      get: {
        tags: [
          Cities
        ],
        operationId: Cities,
        parameters: [
          {
            name: $select,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $expand,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $filter,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $orderby,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $top,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $skip,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $count,
            in: query,
            schema: {
              type: boolean
            }
          }
        ],
        responses: {
          200: {
            description: OK,
            content: {
              application/json: {
                schema: {
                  type: array,
                  items: {
                    $ref: #/components/schemas/CityDto
                  }
                }
              }
            }
          }
        }
      }
    },
    /Customers: {
      get: {
        tags: [
          Customers
        ],
        operationId: Customers,
        parameters: [
          {
            name: $select,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $expand,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $filter,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $orderby,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $top,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $skip,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $count,
            in: query,
            schema: {
              type: boolean
            }
          }
        ],
        responses: {
          200: {
            description: OK,
            content: {
              application/json: {
                schema: {
                  type: array,
                  items: {
                    $ref: #/components/schemas/CustomerDto
                  }
                }
              }
            }
          }
        }
      }
    },
    /$metadata: {
      get: {
        tags: [
          Metadata
        ],
        operationId: $metadata,
        responses: {
          200: {
            description: OK,
            content: {
              application/xml: {
                schema: {
                  type: string
                }
              }
            }
          }
        }
      }
    },
    /: {
      get: {
        tags: [
          Metadata
        ],
        operationId: ,
        responses: {
          200: {
            description: OK,
            content: {
              application/json: {
                schema: {
                  type: object,
                  properties: {
                    @odata.context: {
                      type: string
                    },
                    value: {
                      type: array,
                      items: {
                        type: object,
                        properties: {
                          name: {
                            type: string
                          },
                          kind: {
                            type: string
                          },
                          url: {
                            type: string
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    /OrderItems: {
      get: {
        tags: [
          OrderItems
        ],
        operationId: OrderItems,
        parameters: [
          {
            name: $select,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $expand,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $filter,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $orderby,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $top,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $skip,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $count,
            in: query,
            schema: {
              type: boolean
            }
          }
        ],
        responses: {
          200: {
            description: OK,
            content: {
              application/json: {
                schema: {
                  type: array,
                  items: {
                    $ref: #/components/schemas/OrderItemDto
                  }
                }
              }
            }
          }
        }
      }
    },
    /Orders: {
      get: {
        tags: [
          Orders
        ],
        operationId: Orders,
        parameters: [
          {
            name: $select,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $expand,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $filter,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $orderby,
            in: query,
            schema: {
              type: string
            }
          },
          {
            name: $top,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $skip,
            in: query,
            schema: {
              minimum: 0,
              type: integer,
              format: int32
            }
          },
          {
            name: $count,
            in: query,
            schema: {
              type: boolean
            }
          }
        ],
        responses: {
          200: {
            description: OK,
            content: {
              application/json: {
                schema: {
                  type: array,
                  items: {
                    $ref: #/components/schemas/OrderDto
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  components: {
    schemas: {
      CityDto: {
        required: [
          id,
          name
        ],
        type: object,
        properties: {
          id: {
            type: integer,
            format: int32
          },
          name: {
            type: string,
            nullable: true
          }
        },
        additionalProperties: false
      },
      CustomerDto: {
        required: [
          city,
          cityId,
          id,
          name,
          orders
        ],
        type: object,
        properties: {
          id: {
            type: integer,
            format: int32
          },
          name: {
            type: string,
            nullable: true
          },
          cityId: {
            type: integer,
            format: int32
          },
          city: {
            $ref: #/components/schemas/CityDto
          },
          orders: {
            type: array,
            items: {
              $ref: #/components/schemas/OrderDto
            },
            nullable: true
          }
        },
        additionalProperties: false
      },
      OrderDto: {
        required: [
          customerId,
          id,
          items,
          placedAt,
          total
        ],
        type: object,
        properties: {
          id: {
            type: integer,
            format: int32
          },
          placedAt: {
            type: string,
            format: date-time
          },
          total: {
            type: number,
            format: double
          },
          customerId: {
            type: integer,
            format: int32
          },
          items: {
            type: array,
            items: {
              $ref: #/components/schemas/OrderItemDto
            },
            nullable: true
          }
        },
        additionalProperties: false
      },
      OrderItemDto: {
        required: [
          description,
          id,
          orderId,
          quantity,
          sku,
          unitPrice
        ],
        type: object,
        properties: {
          id: {
            type: integer,
            format: int32
          },
          sku: {
            type: string,
            nullable: true
          },
          description: {
            type: string,
            nullable: true
          },
          quantity: {
            type: integer,
            format: int32
          },
          unitPrice: {
            type: number,
            format: double
          },
          orderId: {
            type: integer,
            format: int32
          }
        },
        additionalProperties: false
      }
    },
    securitySchemes: {
      ApiKey: {
        type: apiKey,
        name: ApiKey,
        in: header
      }
    }
  },
  security: [
    {}
  ]
}